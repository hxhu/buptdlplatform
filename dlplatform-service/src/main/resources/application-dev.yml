spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://playwolf.mysql.rds.aliyuncs.com:3306/dlplatform?serverTimezone=UTC&characterEncoding=utf-8&useSSL=false
    username: dlplatform_app
    password: 1234asdf!
    driver-class-name: com.mysql.jdbc.Driver
    hikari:
      pool-name: pool-vscloud
      connectionTestQuery: SELECT 1
      maximum-pool-size: 50
      minimum-idle: 10
  data:
    mongodb:
      uri: mongodb://127.0.0.1:27017/dlplatform
  redis:
    database: 1
    host: 127.0.0.1
    port: 6379
#  kafka:
        ##    consumer:
        ##      bootstrap-servers: 127.0.0.1:9092
        ##      # 键的反序列化方式
        ##      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        ##      # 值的反序列化方式
        ##      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        ##      enable-auto-commit: false
      ##    listener:
      ##      ack-mode: manual_immediate

#      # 自动提交的时间间隔 在spring boot 2.X 版本中这里采用的是值的类型为Duration 需要符合特定的格式，如1S,1M,2H,5D
#      auto-commit-interval: 1S
#      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
#      # latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
#      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
#      auto-offset-reset: earliest
#      # 是否自动提交偏移量，默认值是true,为了避免出现重复数据和数据丢失，可以把它设置为false,然后手动提交偏移量
#      enable-auto-commit: true
#    listener:
#      # 在侦听器容器中运行的线程数。
#      concurrency: 5
#      #listner负责ack，每调用一次，就立即commit
#      ack-mode: manual_immediate
#      missing-topics-fatal: false

app:
  idGenerator:
    workerId: 1
    datacenterId: 0

mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描,多个package用逗号或者分号分隔
  typeAliasesPackage:
  typeEnumsPackage:
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 2
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置
    #key-generator:
    #逻辑删除配置
    logic-delete-value: 0
    logic-not-delete-value: 1
  #    #自定义填充策略接口实现
  #    meta-object-handler:
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

logging:
  config: classpath:logback-dev.xml

eureka:
  #自定义实例编号
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    # 优先使用IP地址方式进行注册服务
    prefer-ip-address: true
    # 配置使用指定IP
    #ip-address: 127.0.0.1
  client:
    # 服务注册地址
    serviceUrl:
      defaultZone: http://localhost:8771/eureka/

ftp:
  host: 47.94.44.231
  username: ftpdir
  password: 123456
